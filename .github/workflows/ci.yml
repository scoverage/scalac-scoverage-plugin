name: CI

on:
  push:
    paths-ignore:
      - 'doc/**'
      - 'docs/**'
      - '*.md'
    branches:
      - main
  pull_request:

jobs:
  test-plugin:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        java: ['8', '17']
        scala: [
            { version: '2.12.18' },
            { version: '2.12.17' },
            { version: '2.12.16' },
            { version: '2.13.12' },
            { version: '2.13.11' },
            { version: '2.13.10' },
          ]
    steps:
      - name: checkout the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JVM
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: run tests
        run: sbt ++${{ matrix.scala.version }} plugin/test

  test-the-rest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        java: ['8', '17' ]
        module: ['runtime', 'runtimeJS', 'runtimeJSDOMTest', 'runtimeNative', 'reporter', 'domain', 'serializer']
    steps:
      - name: checkout the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JVM
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Install JSDOM
        run: npm install
        if: matrix.module == 'runtimeJSDOMTest'

      - name: run tests
        run: sbt +${{ matrix.module }}/test

  style-check:
    runs-on: ubuntu-latest

    steps:
      - name: checkout the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JVM
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: styleCheck
        run: sbt styleCheck
